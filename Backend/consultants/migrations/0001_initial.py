# Generated by Django 5.2.4 on 2025-07-29 16:12

import consultants.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(default='#007bff', help_text='Couleur hexadécimale', max_length=7)),
                ('icon', models.CharField(blank=True, help_text="Nom de l'icône", max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Catégorie de document',
                'verbose_name_plural': 'Catégories de documents',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Projet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=191)),
                ('description', models.TextField(blank=True, null=True)),
                ('responsable', models.CharField(max_length=100)),
                ('date_debut', models.DateField(blank=True, null=True)),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('statut', models.CharField(default='En cours', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Projet',
                'verbose_name_plural': 'Projets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrateur'), ('CONSULTANT', 'Consultant')], default='CONSULTANT', max_length=20)),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AppelOffre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(help_text="Titre de l'appel d'offre", max_length=500)),
                ('date_de_publication', models.DateField(blank=True, help_text="Date de publication de l'appel d'offre", null=True)),
                ('date_limite', models.DateField(blank=True, help_text='Date limite de soumission', null=True)),
                ('client', models.CharField(blank=True, help_text='Nom du client ou organisme', max_length=300, null=True)),
                ('type_d_appel_d_offre', models.CharField(blank=True, help_text="Type d'appel d'offre (consultation, appel d'offres ouvert, etc.)", max_length=200, null=True)),
                ('description', models.TextField(blank=True, help_text="Description détaillée de l'appel d'offre", null=True)),
                ('critere_evaluation', models.TextField(blank=True, help_text="Critères d'évaluation des offres", null=True)),
                ('documents', models.TextField(blank=True, help_text='Liens vers les documents ou fichiers joints', null=True)),
                ('lien_site', models.URLField(blank=True, help_text="Lien vers la page source de l'appel d'offre", max_length=500, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': "Appel d'offre",
                'verbose_name_plural': "Appels d'offres",
                'ordering': ['-date_de_publication', '-created_at'],
                'indexes': [models.Index(fields=['date_de_publication'], name='consultants_date_de_eafc98_idx'), models.Index(fields=['date_limite'], name='consultants_date_li_1533b1_idx'), models.Index(fields=['client'], name='consultants_client_e9e77b_idx'), models.Index(fields=['type_d_appel_d_offre'], name='consultants_type_d__bbc383_idx')],
            },
        ),
        migrations.CreateModel(
            name='Consultant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=191, unique=True)),
                ('telephone', models.CharField(max_length=20)),
                ('pays', models.CharField(max_length=100)),
                ('ville', models.CharField(blank=True, max_length=100, null=True)),
                ('date_debut_dispo', models.DateField()),
                ('date_fin_dispo', models.DateField()),
                ('startAvailability', models.DateField(blank=True, null=True)),
                ('endAvailability', models.DateField(blank=True, null=True)),
                ('firstName', models.CharField(blank=True, max_length=100, null=True)),
                ('lastName', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('domaine_principal', models.CharField(choices=[('DIGITAL', 'Digital et Télécoms'), ('FINANCE', 'Secteur bancaire et financier'), ('ENERGIE', 'Transition énergétique'), ('INDUSTRIE', 'Industrie et Mines')], default='DIGITAL', max_length=20)),
                ('specialite', models.CharField(blank=True, max_length=191, null=True)),
                ('expertise', models.CharField(choices=[('Débutant', 'Débutant (0-2 ans)'), ('Intermédiaire', 'Intermédiaire (3-7 ans)'), ('Expert', 'Expert (8+ ans)'), ('Senior', 'Senior Expert (15+ ans)')], default='Débutant', max_length=20)),
                ('skills', models.TextField(blank=True, help_text='Compétences séparées par des virgules', null=True)),
                ('annees_experience', models.IntegerField(default=0, help_text="Années d'expérience professionnelle totale")),
                ('formation_niveau', models.CharField(choices=[('BAC', 'Baccalauréat'), ('BAC+2', 'BTS/DUT/DEUG'), ('BAC+3', 'Licence/Bachelor'), ('BAC+4', 'Maîtrise'), ('BAC+5', 'Master/Ingénieur'), ('BAC+8', 'Doctorat/PhD')], default='BAC+3', max_length=50)),
                ('certifications_count', models.IntegerField(default=0, help_text='Nombre de certifications professionnelles')),
                ('projets_realises', models.IntegerField(default=0, help_text='Nombre de projets significatifs réalisés')),
                ('leadership_experience', models.BooleanField(default=False, help_text='Expérience en leadership/management')),
                ('international_experience', models.BooleanField(default=False, help_text='Expérience internationale')),
                ('expertise_score', models.IntegerField(blank=True, help_text="Score d'expertise calculé (0-100)", null=True)),
                ('statut', models.CharField(choices=[('Actif', 'Actif'), ('Inactif', 'Inactif'), ('En_attente', 'En attente'), ('Suspendu', 'Suspendu')], default='En_attente', max_length=20)),
                ('is_validated', models.BooleanField(default=False, help_text="Consultant validé par l'admin")),
                ('cv', models.FileField(blank=True, null=True, upload_to='consultants/cvs/')),
                ('cvFilename', models.CharField(blank=True, max_length=191, null=True)),
                ('standardizedCvFilename', models.CharField(blank=True, max_length=191, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='consultants/photos/')),
                ('profileImage', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consultant_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consultant',
                'verbose_name_plural': 'Consultants',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Competence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_competence', models.CharField(max_length=191)),
                ('niveau', models.IntegerField()),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competences', to='consultants.consultant')),
            ],
        ),
        migrations.CreateModel(
            name='CriteresEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_critere', models.CharField(max_length=191)),
                ('poids', models.DecimalField(decimal_places=2, max_digits=5)),
                ('description', models.TextField(blank=True, null=True)),
                ('appel_offre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criteres', to='consultants.appeloffre')),
            ],
            options={
                'verbose_name': "Critère d'évaluation",
                'verbose_name_plural': "Critères d'évaluation",
            },
        ),
        migrations.CreateModel(
            name='CVRichatGenerated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=191, verbose_name='Nom du fichier')),
                ('cv_data', models.TextField(help_text='Données JSON utilisées pour générer le CV', verbose_name='Données CV')),
                ('generated_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de génération')),
                ('file_size', models.IntegerField(blank=True, null=True, verbose_name='Taille du fichier (bytes)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('download_count', models.IntegerField(default=0, verbose_name='Nombre de téléchargements')),
                ('last_downloaded', models.DateTimeField(blank=True, null=True, verbose_name='Dernier téléchargement')),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='richat_cvs', to='consultants.consultant', verbose_name='Consultant')),
            ],
            options={
                'verbose_name': 'CV Richat Généré',
                'verbose_name_plural': 'CV Richat Générés',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_document', models.CharField(max_length=20)),
                ('fichier', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('date_upload', models.DateTimeField(auto_now_add=True)),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='consultants.consultant')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentGED',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=191)),
                ('description', models.TextField(blank=True, null=True)),
                ('file', models.FileField(upload_to=consultants.models.DocumentGED.get_upload_path)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('document_type', models.CharField(choices=[('APPEL_OFFRE', "Document d'appel d'offre"), ('ETUDE', 'Étude'), ('RAPPORT', 'Rapport de mission'), ('CV', 'CV consultant'), ('METHODOLOGIE', 'Méthodologie'), ('CONTRAT', 'Contrat'), ('AUTRE', 'Autre')], max_length=20)),
                ('folder_type', models.CharField(choices=[('AO_ADMIN', 'Dossier administratif (A.O)'), ('AO_TECHNIQUE', 'Dossier technique (A.O)'), ('AO_FINANCE', 'Dossier financier (A.O)'), ('AMI_CONTEXTE', 'Contexte (A.M.I)'), ('AMI_OUTREACH', 'Outreach (A.M.I)'), ('GENERAL', 'Général')], default='GENERAL', max_length=20)),
                ('version', models.CharField(blank=True, max_length=20, null=True)),
                ('tags', models.CharField(blank=True, max_length=191, null=True)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=False)),
                ('file_exists', models.BooleanField(default=True)),
                ('last_file_check', models.DateTimeField(blank=True, null=True)),
                ('appel_offre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ged_documents', to='consultants.appeloffre')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='consultants.documentcategory')),
                ('consultant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ged_documents', to='consultants.consultant')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document GED',
                'verbose_name_plural': 'Documents GED',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='DocumentAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_time', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(choices=[('VIEW', 'Consultation'), ('DOWNLOAD', 'Téléchargement'), ('EDIT', 'Modification'), ('DELETE', 'Suppression')], max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesses', to='consultants.documentged')),
            ],
            options={
                'ordering': ['-access_time'],
            },
        ),
        migrations.CreateModel(
            name='DocumentVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.CharField(max_length=20)),
                ('file', models.FileField(upload_to='ged/versions/')),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='consultants.documentged')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MatchingResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_validated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appel_offre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matchings', to='consultants.appeloffre')),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matchings', to='consultants.consultant')),
            ],
            options={
                'ordering': ['-score'],
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_projet', models.CharField(blank=True, max_length=200, null=True)),
                ('client', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('titre', models.CharField(max_length=191)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('statut', models.CharField(max_length=20)),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('date_validation', models.DateTimeField(auto_now_add=True)),
                ('appel_offre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='missions', to='consultants.appeloffre')),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='missions', to='consultants.consultant')),
            ],
        ),
        migrations.AddField(
            model_name='documentged',
            name='mission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ged_documents', to='consultants.mission'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('MATCH_VALID', 'Validation de matching'), ('NEW_OFFER', 'Nouvelle offre'), ('SYSTEM', 'Notification système'), ('MATCH_SUGGEST', 'Suggestion de matching'), ('ADMIN_INFO', 'Information administrative')], default='SYSTEM', max_length=20)),
                ('title', models.CharField(max_length=191)),
                ('content', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='consultants.consultant')),
                ('related_appel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='consultants.appeloffre')),
                ('related_match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='consultants.matchingresult')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ParticipationMission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=50)),
                ('evaluation', models.IntegerField(blank=True, help_text='Note sur 10', null=True)),
                ('commentaires', models.TextField(blank=True, null=True)),
                ('date_debut', models.DateField(blank=True, null=True)),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='consultants.consultant')),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='consultants.mission')),
            ],
            options={
                'verbose_name': 'Participation à une mission',
                'verbose_name_plural': 'Participations aux missions',
            },
        ),
        migrations.AddField(
            model_name='documentged',
            name='projet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ged_documents', to='consultants.projet'),
        ),
        migrations.AddIndex(
            model_name='consultant',
            index=models.Index(fields=['email'], name='consultants_email_55d8cb_idx'),
        ),
        migrations.AddIndex(
            model_name='consultant',
            index=models.Index(fields=['statut'], name='consultants_statut_b15f37_idx'),
        ),
        migrations.AddIndex(
            model_name='consultant',
            index=models.Index(fields=['is_validated'], name='consultants_is_vali_983d2f_idx'),
        ),
        migrations.AddIndex(
            model_name='consultant',
            index=models.Index(fields=['domaine_principal'], name='consultants_domaine_acaf24_idx'),
        ),
        migrations.AddIndex(
            model_name='consultant',
            index=models.Index(fields=['expertise'], name='consultants_experti_e20b59_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='competence',
            unique_together={('consultant', 'nom_competence')},
        ),
        migrations.AlterUniqueTogether(
            name='criteresevaluation',
            unique_together={('appel_offre', 'nom_critere')},
        ),
        migrations.AlterUniqueTogether(
            name='documentversion',
            unique_together={('document', 'version_number')},
        ),
        migrations.AlterUniqueTogether(
            name='matchingresult',
            unique_together={('appel_offre', 'consultant')},
        ),
        migrations.AlterUniqueTogether(
            name='participationmission',
            unique_together={('mission', 'consultant')},
        ),
    ]
